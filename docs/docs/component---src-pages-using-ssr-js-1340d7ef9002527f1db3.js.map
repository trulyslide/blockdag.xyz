{"version":3,"file":"component---src-pages-using-ssr-js-1340d7ef9002527f1db3.js","mappings":"mJAQA,IANe,IACb,8B,+CCWF,IAXe,IACb,8BACE,gBAAC,EAAAA,KAAI,CAACC,GAAG,KACP,uBAAKC,IAAI,yBAAyBC,IAAI,gBAAgBC,MAAM,SAE9D,qBAAGC,KAAK,mCAAmCC,UAAU,cACnD,uBAAKJ,IAAI,6BAA6BC,IAAI,mBAAmBC,MAAM,S,mECOzE,IAXe,IAA2C,IAA1C,SAAEG,EAAQ,eAAEC,GAAiB,GAAO,EAClD,OACE,gCACE,gBAAC,IAAM,MACP,4BAAOD,GACNC,GAAkB,gBAAC,IAAO,MAC3B,gBAAC,IAAM,MACN,C,+CCgCP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAEC,EAAK,SAAEH,GAAU,EAC3C,MAAM,KAAEI,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBJ,MAExC,OACE,gCACE,6BAAQK,EAAkBL,EAAK,MAAMK,EAAiBL,GACtD,wBAAMM,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASP,IACnC,wBAAMQ,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,aAAjB,EAAmBK,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASP,IACpC,wBAAMM,KAAK,sBAAsBC,QAASJ,IACzCN,EAGP,C,qCCvBA,IAjBgB,IACd,uBAAKD,UAAU,gBACb,+BACE,0BAAI,aACJ,0BACE,0BAAI,qBAAGD,KAAK,iHAAgH,sCAAsC,iCAClK,0BAAI,qBAAGA,KAAK,kHAAiH,oCAAoC,iCACjK,0BAAI,qBAAGA,KAAK,+BAA8B,kBAAkB,4CAC5D,0BAAI,qBAAGA,KAAK,sFAAqF,6CACjG,0BAAI,qBAAGA,KAAK,IAAG,sDAAsD,qEACrE,0BAAI,qBAAGA,KAAK,gIAA+H,mFAAmF,iCAC9N,0BAAI,qBAAGA,KAAK,6GAA4G,8CAA8C,mC,6GCP9K,MA4Bae,EAAO,IAAM,gBAAC,IAAG,CAACV,MAAM,cAErC,UA9BiB,IAAqB,IAApB,WAAEW,GAAY,EAC9B,OACE,gBAAC,IAAM,KACL,0BAAI,gBACW,yBAAG,yBAElB,yBAAG,mHAE4C,IAC7C,4BAAM,yCAA4C,KAEpD,uBACEC,MAAO,CAAElB,MAAO,QAASmB,aAAc,wBACvCpB,IAAI,eACJD,IAAKmB,EAAWG,UAElB,yBAAG,kCAC+B,IAChC,qBAAGnB,KAAK,oFAAmF,6CAEvF,KAGN,gBAAC,EAAAL,KAAI,CAACC,GAAG,KAAI,2BACN,C","sources":["webpack://gatsby-starter-default/./src/components/footer.js","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/components/sidebar.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["import React from \"react\"\r\n\r\nconst Footer = () => (\r\n  <footer>\r\n    {/* Footer content */}\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <Link to=\"/\">\r\n      <img src=\"/img/blockDAG_logo.png\" alt=\"BlockDAG Logo\" width=\"250\" />\r\n    </Link>\r\n    <a href=\"https://twitter.com/blockdag_xyz\" className=\"right-side\">\r\n      <img src=\"/img/blockdag_x_handle.png\" alt=\"BlockDAG Twitter\" width=\"200\" />\r\n    </a>\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport Header from \"./header\"\r\nimport Sidebar from \"./sidebar\"\r\nimport Footer from \"./footer\"\r\n\r\nconst Layout = ({ children, includeSidebar = false }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>{children}</main>\r\n      {includeSidebar && <Sidebar />}\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import React from \"react\"\r\n\r\nconst Sidebar = () => (\r\n  <div className=\"right-column\">\r\n    <section>\r\n      <h3>Reference</h3>\r\n      <ul>\r\n        <li><a href=\"https://www.taraxa.io/posts/blockchain101/debunking-misconceptions-about-dag-6b5372a94fe43397158e35b551d6b439\">Debunking misconceptions about DAG</a> - Steven Pu (Taraxa Founder)</li>\r\n        <li><a href=\"https://www.taraxa.io/posts/consensus/single-chain-topologys-tough-trade-offs-a2b9a2eae6466d77e331e3b3b0a5032c\">Taraxa Consensus (5 Part Series)</a> - Steven Pu (Taraxa Founder)</li>\r\n        <li><a href=\"https://kaspa.org/features/\">Kaspa Features</a> - with details on BlockDAG and GhostDAG</li>\r\n        <li><a href=\"https://ancapalex.medium.com/an-introduction-to-the-blockdag-paradigm-50027f44facb\">An introduction to the blockDAG paradigm</a></li>\r\n        <li><a href=\"\">Secure High-Rate Transaction Processing in Bitcoin</a> - Sompolinsky and Zohar (origins of Ghost protocol and BlockDAG)</li>\r\n        <li><a href=\"https://medium.com/taraxa-project/taraxa-enabling-revenue-sharing-business-models-by-making-machines-trustworthy-d9ef9d3bead\">Taraxa: Enabling Revenue-Sharing Business Models by Making Machines Trustworthy</a> - Steven Pu (Taraxa Founder)</li>\r\n        <li><a href=\"https://medium.com/taraxa-project/democratizing-reputation-by-tracking-informal-transactions-6e32ef229b42\">Democratizing Reputation via Informal Data</a> - Steven Pu (Taraxa Founder)</li>\r\n        </ul>\r\n    </section>\r\n  </div>\r\n)\r\n\r\nexport default Sidebar\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst UsingSSR = ({ serverData }) => {\r\n  return (\r\n    <Layout>\r\n      <h1>\r\n        This page is <b>rendered server-side</b>\r\n      </h1>\r\n      <p>\r\n        This page is rendered server side every time the page is requested.\r\n        Reload it to see a(nother) random photo from{\" \"}\r\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\r\n      </p>\r\n      <img\r\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\r\n        alt=\"A random dog\"\r\n        src={serverData.message}\r\n      />\r\n      <p>\r\n        To learn more, head over to our{\" \"}\r\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\r\n          documentation about Server Side Rendering\r\n        </a>\r\n        .\r\n      </p>\r\n      <Link to=\"/\">Go back to the homepage</Link>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"Using SSR\" />\r\n\r\nexport default UsingSSR\r\n\r\nexport async function getServerData() {\r\n  try {\r\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\r\n    if (!res.ok) {\r\n      throw new Error(`Response failed`)\r\n    }\r\n    return {\r\n      props: await res.json(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      status: 500,\r\n      headers: {},\r\n      props: {},\r\n    }\r\n  }\r\n}\r\n"],"names":["Link","to","src","alt","width","href","className","children","includeSidebar","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","Head","serverData","style","borderRadius","message"],"sourceRoot":""}